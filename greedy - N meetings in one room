// N meetings in one room - greedy : https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1
// https://takeuforward.org/data-structure/n-meetings-in-one-room/

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    int maxMeetings(int start[], int end[], int n)
    {
        vector<pair<int,int>> v;
        for(int i=0; i<n; i++){
            int a=start[i];
            int b=end[i];
            v.push_back(make_pair(a,b));
        }
        sort(v.begin(),v.end());
        int ans=0;
        int last=-1;
        for(int i=0; i<n; i++){
            if(v[i].first>last){
                last=v[i].second;
                ans++;
            }
            else if (v[i].second<last){
                last=v[i].second;
            }
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++) cin >> start[i];

        for (int i = 0; i < n; i++) cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(start, end, n);
        cout << ans << endl;
    }
    return 0;
}
// } Driver Code Ends
